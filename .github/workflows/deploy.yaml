on:
  push:
    branches:
      - main
jobs:
  tsc:
    name: tsc
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: install node v16
      uses: actions/setup-node@v3
      with:
        node-version: 16
    # - name: install dependencies
    #   run: npm install
    - name: tsc
      run: tsc
    - name: Upload the build folder
      uses: actions/upload-artifact@master
      with:
        name: build-artifact
        path: build
    - name: log
      run: tree
  get-lambda-files-names:
    runs-on: ubuntu-latest
    needs: tsc
    outputs:
      lambdaArray: ${{ steps.getLambdas.outputs.lambdas }}
    steps:
      - name: Download the build folder
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: build
      - name: Get functions filenames
        id: getLambdas
        run: |
          lambdas=$(tree -J | jq '.[0].contents | map(select(.name == "build" and .type == "directory")) | .[0].contents | try map(select(.name == "functions" and .type == "directory")) catch [] | .[0].contents | try map(select(.type == "directory")) catch [] | map(.name)')
          echo ${lambdas}
          echo ::set-output name=lambdas::${lambdas}
      - name: log
        run: tree
  lambdas:
    runs-on: ubuntu-latest
    needs: get-lambda-files-names
    strategy:
      matrix:
        lambda: ${{ fromJSON(needs.get-lambda-files-names.outputs.lambdaArray) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Download the build folder
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: build
      - name: Debug log tree
        run: tree
      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1
      - run: zip -j ${{matrix.lambda}}.zip ./build/functions/${{matrix.lambda}}
      - run: aws lambda update-function-code --function-name=${{matrix.lambda}} --zip-file=fileb://${{matrix.lambda}}.zip